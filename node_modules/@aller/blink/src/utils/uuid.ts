/* tslint:disable */

declare var performance: any;

const uuidDict: any = {};

/**
 * Gives a unique but consistent id for each key.
 * Saves the uuid, so if several system is using this, they get the same value!
 */
export default function generateUUID(key = '') {
  if (key && key in uuidDict) {
    return uuidDict[key];
  }

  // Public Domain/MIT
  let d = new Date().getTime();
  if (
    typeof performance !== 'undefined' &&
    typeof performance.now === 'function'
  ) {
    d += performance.now(); // use high-precision timer if available
  }
  const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {
    const r = (d + Math.random() * 16) % 16 | 0;
    d = Math.floor(d / 16);
    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);
  });
  uuidDict[key] = uuid;
  return uuid;
}
