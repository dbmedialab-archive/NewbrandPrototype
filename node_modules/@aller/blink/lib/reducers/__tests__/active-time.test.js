"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var active_time_1 = __importDefault(require("../active-time"));
var actions_1 = require("../../actions");
describe('activeTime reducer', function () {
    describe('pageInit', function () {
        it('should flush state', function () {
            var state = {
                'dagbladet.no/345': {
                    activity: [{ type: 'start', time: new Date(5) }],
                    url: 'https://www.dagbladet.no/a/345',
                    id: 'dagbladet.no/345',
                },
            };
            var action = {
                type: actions_1.PAGE_INIT,
                payload: { url: 'https://dagbladet.no/' },
            };
            expect(active_time_1.default(state, action)).toEqual({});
        });
    });
    describe('pageActivityStart', function () {
        it('should start event into empty state', function () {
            var action = {
                type: actions_1.ARTICLE_ACTIVITY_START,
                payload: {
                    id: 'dagbladet.no/345',
                    time: new Date(5),
                    url: 'https://www.dagbladet.no/a/345',
                },
            };
            expect(active_time_1.default({}, action)).toEqual({
                'dagbladet.no/345': {
                    activity: [
                        {
                            type: 'start',
                            time: new Date(5),
                        },
                    ],
                    url: 'https://www.dagbladet.no/a/345',
                    id: 'dagbladet.no/345',
                },
            });
        });
        it('should add start event at end of prev state if last element is start', function () {
            var action = {
                type: actions_1.ARTICLE_ACTIVITY_START,
                payload: {
                    id: 'dagbladet.no/345',
                    time: new Date(10),
                    url: 'https://www.dagbladet.no/a/345',
                },
            };
            var prevState = {
                'dagbladet.no/345': {
                    activity: [{ type: 'start', time: new Date(3) }],
                    url: 'https://www.dagbladet.no/a/345',
                    id: 'dagbladet.no/345',
                },
            };
            var expected = {
                'dagbladet.no/345': {
                    activity: [
                        { type: 'start', time: new Date(3) },
                        { type: 'start', time: new Date(10) },
                    ],
                    url: 'https://www.dagbladet.no/a/345',
                    id: 'dagbladet.no/345',
                },
            };
            expect(active_time_1.default(prevState, action)).toEqual(expected);
        });
        it('should add start event at end of prev state if last element is stop', function () {
            var action = {
                type: actions_1.ARTICLE_ACTIVITY_START,
                payload: {
                    id: 'dagbladet.no/345',
                    time: new Date(10),
                    url: 'https://www.dagbladet.no/a/345',
                },
            };
            var prevState = {
                'dagbladet.no/345': { activity: [{ type: 'stop', time: new Date(3) }] },
            };
            expect(active_time_1.default(prevState, action)).toEqual({
                'dagbladet.no/345': {
                    activity: [
                        { type: 'stop', time: new Date(3) },
                        { type: 'start', time: new Date(10) },
                    ],
                    url: 'https://www.dagbladet.no/a/345',
                    id: 'dagbladet.no/345',
                },
            });
        });
    });
    describe('pageActivityStop', function () {
        it('should start event into empty state', function () {
            var action = {
                type: actions_1.ARTICLE_ACTIVITY_STOP,
                payload: {
                    id: 'dagbladet.no/345',
                    time: new Date(5),
                    url: 'https://www.dagbladet.no/a/345',
                },
            };
            expect(active_time_1.default({}, action)).toEqual({
                'dagbladet.no/345': {
                    activity: [{ type: 'stop', time: new Date(5) }],
                    url: 'https://www.dagbladet.no/a/345',
                    id: 'dagbladet.no/345',
                },
            });
        });
        it('should not add stop event at end of prev state if last element is stop', function () {
            var action = {
                type: actions_1.ARTICLE_ACTIVITY_STOP,
                payload: {
                    id: 'dagbladet.no/345',
                    time: new Date(10),
                    url: 'https://www.dagbladet.no/a/345',
                },
            };
            var prevState = {
                'dagbladet.no/345': {
                    activity: [{ type: 'stop', time: new Date(3) }],
                    url: 'https://www.dagbladet.no/a/345',
                    id: 'dagbladet.no/345',
                },
            };
            expect(active_time_1.default(prevState, action)).toEqual(prevState);
        });
        it('should add start event at end of prev state if last element is stop', function () {
            var action = {
                type: actions_1.ARTICLE_ACTIVITY_STOP,
                payload: {
                    id: 'dagbladet.no/345',
                    time: new Date(10),
                    url: 'https://www.dagbladet.no/a/345',
                },
            };
            var prevState = {
                'dagbladet.no/345': {
                    activity: [{ type: 'start', time: new Date(3) }],
                },
            };
            expect(active_time_1.default(prevState, action)).toEqual({
                'dagbladet.no/345': {
                    activity: [
                        { type: 'start', time: new Date(3) },
                        { type: 'stop', time: new Date(10) },
                    ],
                    url: 'https://www.dagbladet.no/a/345',
                    id: 'dagbladet.no/345',
                },
            });
        });
    });
});
//# sourceMappingURL=active-time.test.js.map