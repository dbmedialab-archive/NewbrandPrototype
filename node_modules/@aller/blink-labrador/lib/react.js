"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var blink_1 = __importDefault(require("@aller/blink"));
var throttle_1 = __importDefault(require("./utils/throttle"));
var sender_1 = __importDefault(require("./sender/sender"));
var configure_sender_1 = require("./sender/configure-sender");
var get_ab_cookie_1 = __importDefault(require("./utils/get-ab-cookie"));
var get_site_1 = __importDefault(require("./utils/get-site"));
var get_xavier_id_1 = __importDefault(require("./utils/get-xavier-id"));
var get_db_pluss_data_1 = __importDefault(require("./utils/get-db-pluss-data"));
var get_sender_config_1 = __importDefault(require("./sender/get-sender-config"));
var BlinkContext = React.createContext({});
exports.BlinkConsumer = BlinkContext.Consumer;
var BlinkProvider = /** @class */ (function (_super) {
    __extends(BlinkProvider, _super);
    function BlinkProvider(props) {
        var _this = _super.call(this, props) || this;
        _this.activeTimeTimerId = 0;
        _this.blink = blink_1.default({
            send: function (events) { return sender_1.default.sendWhenBefitting(events); },
            sendDirect: function (events) { return sender_1.default.sendNowIfAllowed(events); },
            useDevTools: true,
        });
        _this._handlePageInit = _this._handlePageInit.bind(_this);
        _this._handlePageLoad = _this._handlePageLoad.bind(_this);
        _this._activityStop = _this._activityStop.bind(_this);
        _this._handleVisibilityChange = _this._handleVisibilityChange.bind(_this);
        _this._activityStart = throttle_1.default(_this._activityStart, 2000, _this);
        _this._trackVideoEvent = _this._trackVideoEvent.bind(_this);
        _this._acceptVideoEvent = _this._acceptVideoEvent.bind(_this);
        return _this;
    }
    BlinkProvider.prototype._handlePageInit = function () {
        this.blink.pageInit({
            url: window.location.href,
            abCookie: get_ab_cookie_1.default(),
            site: get_site_1.default(window.location.hostname),
            userId: get_xavier_id_1.default(),
        });
    };
    BlinkProvider.prototype._handlePageLoad = function () {
        this.blink.pageLoad({
            url: window.location.href,
            plussData: get_db_pluss_data_1.default(),
        });
    };
    BlinkProvider.prototype._resetActiveTimeTimer = function () {
        var _this = this;
        clearTimeout(this.activeTimeTimerId);
        this.activeTimeTimerId = window.setTimeout(function () { return _this._activityStop(); }, 10000);
    };
    BlinkProvider.prototype._activityStart = function () {
        this.blink.pageActivityStart({
            url: window.location.href,
            pageScrollOffsetY: window.pageYOffset,
        });
        this._resetActiveTimeTimer();
    };
    BlinkProvider.prototype._activityStop = function () {
        return this.blink.pageActivityStop({ url: window.location.href });
    };
    BlinkProvider.prototype._handleVisibilityChange = function () {
        if (document.hidden) {
            this.blink.screenHide();
        }
        else {
            this.blink.screenShow();
        }
    };
    BlinkProvider.prototype._initActiveTimeTracking = function () {
        this._resetActiveTimeTimer();
        // Document events
        document.addEventListener('mousedown', this._activityStart);
        document.addEventListener('keydown', this._activityStart);
        document.addEventListener('scroll', this._activityStart);
        document.addEventListener('mousemove', this._activityStart);
        document.addEventListener('visibilitychange', this._handleVisibilityChange);
        // Window events
        window.addEventListener('unload', this._activityStop);
        window.addEventListener('beforeunload', this._activityStop);
        window.addEventListener('pagehide', this._handleVisibilityChange);
    };
    BlinkProvider.prototype._stopActiveTimeTracking = function () {
        // Document events
        document.removeEventListener('mousedown', this._activityStart);
        document.removeEventListener('keydown', this._activityStart);
        document.removeEventListener('scroll', this._activityStart);
        document.removeEventListener('mousemove', this._activityStart);
        document.removeEventListener('visibilitychange', this._handleVisibilityChange);
        // Window events
        window.removeEventListener('unload', this._activityStop);
        window.removeEventListener('beforeunload', this._activityStop);
        window.removeEventListener('pagehide', this._activityStop);
    };
    BlinkProvider.prototype.componentDidMount = function () {
        configure_sender_1.configureSender(get_sender_config_1.default());
        // Register our first pageLoad and init
        this._handlePageInit();
        this._handlePageLoad();
        // Register active time tracking
        this._initActiveTimeTracking();
        // Register iframe video tracking
        window.addEventListener('message', this._acceptVideoEvent, false);
    };
    BlinkProvider.prototype.componentWillUnmount = function () {
        // Deregister active time tracking
        this._stopActiveTimeTracking();
        // Deregister video iframe tracking
        window.removeEventListener('message', this._acceptVideoEvent, false);
    };
    BlinkProvider.prototype._trackVideoEvent = function (ev) {
        switch (ev.type) {
            case 'playerHidden':
                this.blink.playerHidden(ev.data);
                return;
            case 'playerShown':
                this.blink.playerShown(ev.data);
                return;
            case 'playerSticky':
                this.blink.playerSticky(ev.data);
                return;
            case 'videoAd':
                this.blink.videoAd(ev.data);
                return;
            case 'videoLoad':
                this.blink.videoLoad(ev.data);
                return;
            case 'videoPlay':
                this.blink.videoPlay(ev.data);
                return;
            case 'videoStop':
                this.blink.videoStop(ev.data);
                return;
            default:
                return;
        }
    };
    BlinkProvider.prototype._acceptVideoEvent = function (event) {
        // Do not accept events from other domains
        if (event.origin !== window.location.origin) {
            return;
        }
        var data = event.data;
        if (data && data.type && data.data && data.party === 'blink') {
            this._trackVideoEvent(data);
        }
    };
    BlinkProvider.prototype.render = function () {
        return (React.createElement(BlinkContext.Provider, { value: this.blink }, this.props.children));
    };
    return BlinkProvider;
}(React.Component));
exports.BlinkProvider = BlinkProvider;
//# sourceMappingURL=react.js.map