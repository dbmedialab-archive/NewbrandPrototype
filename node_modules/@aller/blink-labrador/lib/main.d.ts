import { Blink, AdLoadInput, CustomInput } from '@aller/blink';
import { JWEvent } from './utils/subscribe-to-jw';
export default class LabradorTracker {
    activeTimeTimerId: number;
    pageView: string;
    blink: Blink;
    inView: any;
    constructor();
    trackPageload(): void;
    trackPerformance(): void;
    /**
     * Track a specify element, logs to GAP, uses the standard ads rules to see if it is inscreen.
     * The reason we just can track on the selector is because each might have a different threshold
     * @param {domNode} element the element to track
     */
    trackAdInscreen(selector: string): void;
    /**
     * Track elements based on a selector, logs to GAP,
     * from first pixel the element is in the viewport
     * @param {string} selector a valid selector that captures all elements you want to track - https://www.w3.org/TR/css3-selectors/
     */
    trackAdInscreen0(selector: string): void;
    trackAdDFP(): void;
    trackAdLoad: (input: AdLoadInput) => void;
    pageInit: () => void;
    trackLinkClicks(): void;
    _trackVideoEvent(ev: JWEvent): void;
    trackVideos: () => void;
    trackCustom: (input: CustomInput) => void;
    _resetActiveTimer(url: string): void;
    trackActiveTime(): void;
    trackArticleImpressions(selector: string): void;
    trackBoxes(selector: string): void;
}
