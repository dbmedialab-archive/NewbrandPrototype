"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var consent_needed_1 = __importDefault(require("../utils/consent-needed"));
var CMP_INFORMATION_STORAGE = 1;
var CMP_PERSONALISATION = 2;
var CMP_AD_TRACKING = 3;
var CMP_CONTENT_TRACKING = 4;
var CMP_MEASUREMENT = 5;
/**
 * We receive a list with numbers, e.g. [1, 2, 3, 4, 5], and update
 * our purposes accordingly. If the number is in the list,
 * it means we have permission for that purpose.
 */
function getConsentData(oil) {
    var _a;
    // Users are opted out by default
    var purposes = (_a = {},
        _a[CMP_INFORMATION_STORAGE] = false,
        _a[CMP_PERSONALISATION] = false,
        _a[CMP_AD_TRACKING] = false,
        _a[CMP_CONTENT_TRACKING] = false,
        _a[CMP_MEASUREMENT] = false,
        _a);
    if (!oil) {
        return purposes;
    }
    try {
        oil.status().consentData.allowedPurposeIds.forEach(function (purpose) {
            purposes[purpose] = true;
        });
    }
    catch (e) { }
    return purposes;
}
exports.getConsentData = getConsentData;
function hasEveryConsent(oil) {
    // Aller has temporarily turned off OIL, so
    // temporarily treat everyone as having consented
    if (!consent_needed_1.default()) {
        return true;
    }
    var cons = getConsentData(oil);
    return (cons[CMP_INFORMATION_STORAGE] &&
        cons[CMP_PERSONALISATION] &&
        cons[CMP_AD_TRACKING] &&
        cons[CMP_CONTENT_TRACKING] &&
        cons[CMP_MEASUREMENT]);
}
exports.hasEveryConsent = hasEveryConsent;
function hasAnsweredOil(oil) {
    // Aller has temporarily turned off OIL, so
    // temporarily treat everyone as having consented
    if (!consent_needed_1.default()) {
        return true;
    }
    if (!oil || !oil.eventCollection) {
        return false;
    }
    var isWantedEvent = function (ev) {
        return ev.name == 'oil_optin_done' || ev.name == 'oil_has_optedin';
    };
    return oil.eventCollection.some(isWantedEvent);
}
exports.hasAnsweredOil = hasAnsweredOil;
//# sourceMappingURL=consent.js.map