"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var consent_1 = require("../consent");
describe('Consent', function () {
    describe('getConsentData', function () {
        it('should return no consent if oil is undefined', function () {
            expect(consent_1.getConsentData(undefined)).toEqual({
                1: false,
                2: false,
                3: false,
                4: false,
                5: false,
            });
        });
        it('should handle all consents stored in oil', function () {
            var oil = {
                status: function () { return ({ consentData: { allowedPurposeIds: [1, 2, 3, 4, 5] } }); },
            };
            expect(consent_1.getConsentData(oil)).toEqual({
                1: true,
                2: true,
                3: true,
                4: true,
                5: true,
            });
        });
        it('should handle that no consents are given in oil', function () {
            var oil = {
                status: function () { return ({ consentData: { allowedPurposeIds: [] } }); },
            };
            expect(consent_1.getConsentData(oil)).toEqual({
                1: false,
                2: false,
                3: false,
                4: false,
                5: false,
            });
        });
        it('should handle that some consents are given in oil', function () {
            var oil = {
                status: function () { return ({ consentData: { allowedPurposeIds: [2, 4, 5] } }); },
            };
            expect(consent_1.getConsentData(oil)).toEqual({
                1: false,
                2: true,
                3: false,
                4: true,
                5: true,
            });
        });
    });
    describe('hasAnsweredOil', function () {
        it('is false if oil is not defined', function () {
            expect(consent_1.hasAnsweredOil(undefined)).toBe(false);
        });
        it('is false if oil is no oil events in collection', function () {
            var oil = {
                eventCollection: [],
            };
            expect(consent_1.hasAnsweredOil(oil)).toBe(false);
        });
        it('is true if oil_has_optedin is in collection', function () {
            var oil = {
                eventCollection: [
                    {
                        name: 'oil_has_optedin',
                        timestamp: new Date(40),
                    },
                ],
            };
            expect(consent_1.hasAnsweredOil(oil)).toBe(true);
        });
        it('is true if oil_optin_done is in collection', function () {
            var oil = {
                eventCollection: [{ name: 'oil_optin_done', timestamp: new Date(100) }],
            };
            expect(consent_1.hasAnsweredOil(oil)).toBe(true);
        });
        it('is true if both oil_optin_done and oil_has_optedin is in collection', function () {
            var oil = {
                eventCollection: [
                    {
                        name: 'oil_has_optedin',
                        timestamp: new Date(40),
                    },
                    { name: 'oil_optin_done', timestamp: new Date(100) },
                ],
            };
            expect(consent_1.hasAnsweredOil(oil)).toBe(true);
        });
        it('is false if only unlrelated events are in collection', function () {
            var oil = {
                eventCollection: [
                    { name: 'oil_unrelated_event', timestamp: new Date(40) },
                    { name: 'oil_other_unrelated_event', timestamp: new Date(100) },
                ],
            };
            expect(consent_1.hasAnsweredOil(oil)).toBe(false);
        });
    });
});
//# sourceMappingURL=consent.test.js.map