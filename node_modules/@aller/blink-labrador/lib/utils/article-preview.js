"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var get_full_url_1 = __importDefault(require("./get-full-url"));
/**
 * Wraps the DOMElement of a plug on the frontpage and extracts metadata.
 */
var ArticlePreview = /** @class */ (function () {
    function ArticlePreview(domElement, location) {
        this.domElement = domElement;
        this.location = location || {
            origin: 'http://location.unknown',
            protocol: 'http:',
        };
    }
    Object.defineProperty(ArticlePreview.prototype, "personalizationParametersRequested", {
        get: function () {
            return this.domElement.getAttribute('data-cxence_widget');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArticlePreview.prototype, "personalizationSystemUsed", {
        get: function () {
            return this.domElement.getAttribute('data-cxense_tag');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArticlePreview.prototype, "fullTitle", {
        get: function () {
            var head = this.domElement.querySelector('h1,.headline');
            if (head) {
                var titleParts = Array.prototype.slice
                    .call(head.childNodes)
                    .filter(function (el) { return el.tagName !== 'STYLE'; })
                    .map(function (el) {
                    var style = window.getComputedStyle(el.nodeType === 3 ? el.parentNode : el, null);
                    return {
                        text: el.textContent.trim(),
                        fontSize: style.getPropertyValue('font-size'),
                    };
                })
                    .filter(function (el) { return !!el.text; });
                return {
                    fullTitle: titleParts.map(function (part) { return part.text; }).join(' '),
                    titleParts: titleParts,
                };
            }
            return {
                fullTitle: '',
                titleParts: [],
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArticlePreview.prototype, "title", {
        get: function () {
            // Handle lommelegen question special case
            var h4 = this.domElement.querySelector('h4');
            if (h4 && h4.textContent) {
                return h4.textContent.trim();
            }
            // Handle dinside test special case
            var itemPropHead = this.domElement.querySelector('h3[itemprop="headline"]');
            if (itemPropHead && itemPropHead.textContent) {
                return itemPropHead.textContent.trim();
            }
            var head = this.domElement.querySelector('h1,.headline');
            if (head) {
                return Array.prototype.slice
                    .call(head.childNodes)
                    .filter(function (c) { return c.tagName !== 'STYLE'; })
                    .map(function (c) { return c.textContent.trim(); })
                    .filter(function (c) { return !!c; })
                    .join(' ');
            }
            var aSpan = this.domElement.querySelector('a span');
            if (aSpan && aSpan.textContent) {
                return aSpan.textContent.trim();
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArticlePreview.prototype, "url", {
        get: function () {
            var a = this.domElement.querySelector('a');
            var href = a ? a.getAttribute('href') : '';
            return get_full_url_1.default(href || '', this.location);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArticlePreview.prototype, "nodeId", {
        get: function () {
            return this.domElement.getAttribute('data-id');
        },
        enumerable: true,
        configurable: true
    });
    return ArticlePreview;
}());
exports.default = ArticlePreview;
//# sourceMappingURL=article-preview.js.map