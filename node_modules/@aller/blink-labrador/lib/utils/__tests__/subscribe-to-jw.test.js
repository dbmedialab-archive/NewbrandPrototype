"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var subscribe_to_jw_1 = require("../subscribe-to-jw");
var JW_AD_IMPRESSION = {
    client: 'googima',
    tag: 'https://pubads.g.doubleclick.net/gampad/ads?iu=/8578/Aller_webtv/autoplay/dagbladet&description_url=https%3A%2F%2Fwww.dagbladet.no%2F&env=vp&impl=s&correlator=&tfcd=0&npa=0&gdfp_req=1&output=vast&sz=480x360%7C480x361&unviewed_position_start=1&cmsid=2498212&vid=d6YerOMx&cust_params=&vid_t=Se%20Ine%20Jansens%20treffende%20parodi%20p%20Ingunn%20Solheim',
    ima: {
        ad: {
            g: {
                adId: '444628240',
                adPodInfo: {
                    podIndex: 0,
                    timeOffset: 0,
                    totalAds: 3,
                    adPosition: 1,
                    isBumper: false,
                    maxDuration: 372,
                },
                adQueryId: '438710936',
                adSystem: 'DCM',
                adWrapperCreativeIds: ['138271882926'],
                adWrapperIds: ['5069961549'],
                adWrapperSystems: ['GDFP'],
                advertiserName: '',
                apiFramework: null,
                clickThroughUrl: 'https://adclick.g.doubleclick.net/pcs/click?xai=AKAOjstwqBtUF1iWraxPS1hI_DpYvG7VA2HcBopRjlctLw-5ZX18mRqTa56LbRlUDcG-U0HgiuYZGDwrsFXIJYdRZPp5Tr5l36sFjrwk1YpFAMZlVwlk-fR29SEAJAa-1zk914OJkcH8Mw&sig=Cg0ArKJSzKFAiSNsIMbBEAE&urlfix=1&adurl=https://www.ice.no/mobilabonnement/ice-junior%3Futm_source%3Daller%26utm_medium%3Dbanner%26utm_campaign%3Db2c_voice%26utm_term%3Ddirekte%26utm_content%3Djunior',
                contentType: 'video/webm',
                creativeAdId: '',
                creativeId: '117060957',
                dealId: '',
                description: '',
                disableUi: false,
                duration: 15,
                height: 0,
                linear: true,
                surveyUrl: null,
                vastMediaBitrate: 452,
                vastMediaHeight: 360,
                vastMediaWidth: 640,
                minSuggestedDuration: 15,
                skippable: false,
                skipTimeOffset: -1,
                title: 'In-Stream Video',
                trustedFirstPartyAd: false,
                traffickingParameters: '',
                universalAdIdRegistry: 'unknown',
                universalAdIdValue: 'unknown',
                uiElements: ['adAttribution', 'countdown'],
                verifications: [],
                vpaid: false,
                width: 0,
                mediaUrl: 'https://gcdn.2mdn.net/videoplayback/id/d1b4a1f53c38267b/itag/43/source/doubleclick_dmm/ctier/L/acao/yes/ip/0.0.0.0/ipbits/0/expire/3703747782/sparams/id,itag,source,ctier,acao,ip,ipbits,expire/signature/A73F7A37A6B087A79C693EFCA8C591CFE4B027FB.FB74ADAC55021A8FCD348E3305B3FE273FC6BC0/key/ck2/file/file.webm?cpn=ehuyMZZzAg_GqUZi',
            },
        },
        userRequestContext: {
            requestType: 'TYPE_API',
            vpaidMode: 'insecure',
            playerVersion: '8.9.0',
            adTagUrl: 'https://pubads.g.doubleclick.net/gampad/ads?iu=/8578/Aller_webtv/autoplay/dagbladet&description_url=https%3A%2F%2Fwww.dagbladet.no%2F&env=vp&impl=s&correlator=&tfcd=0&npa=0&gdfp_req=1&output=vast&sz=480x360%7C480x361&unviewed_position_start=1&cmsid=2498212&vid=d6YerOMx&cust_params=&vid_t=Se%20Ine%20Jansens%20treffende%20parodi%20p%20Ingunn%20Solheim',
        },
    },
    adtitle: 'In-Stream Video',
    adsystem: 'DCM',
    creativetype: 'video/webm',
    linear: 'linear',
    viewable: 1,
    sequence: 1,
    podcount: 3,
    adposition: 'pre',
    adBreakId: '132fp4g1z0bb',
    id: '132fp4g1z0bb',
    adPlayId: '1q5mqjv1okvk',
    timeLoading: 1876.159912109375,
    type: 'adImpression',
};
describe('subscribeToJW', function () {
    it('should call listeners with correct data', function () {
        var player = {
            getAdBlock: function () { return true; },
            getDuration: function () { return 100; },
            getHeight: function () { return 350; },
            getMute: function () { return true; },
            getPlaylistItem: function () { return ({ mediaid: '4934023d' }); },
            getPosition: function () { return 4; },
            getViewable: function () { return true; },
            getVolume: function () { return 84; },
            getWidth: function () { return 900; },
            on: function (name, cb) {
                switch (name) {
                    case 'play':
                        return cb({
                            playReason: 'autoplay',
                        });
                    case 'adImpression':
                        return cb(JW_AD_IMPRESSION);
                    default:
                        return cb({
                            name: name,
                            viewable: true,
                            sticky: true,
                            closed: true,
                        });
                }
            },
        };
        var playerId = 'test-player-id';
        var send = jest.fn();
        var time = new Date(2019, 10, 4);
        // Start the subscription
        subscribe_to_jw_1.subscribeToJW(send, player, playerId, true, time);
        // Get all 8 events
        expect(send.mock.calls.length).toBe(8);
        var videoLoad = send.mock.calls[0][0];
        expect(videoLoad).toEqual({
            party: 'blink',
            type: 'videoLoad',
            data: {
                adblock: true,
                canBeSticky: true,
                duration: 100,
                height: 350,
                muted: true,
                position: 4,
                videoId: '4934023d',
                playerId: 'test-player-id',
                viewable: true,
                width: 900,
            },
        });
        var videoPlay = send.mock.calls[1][0];
        expect(videoPlay).toEqual({
            party: 'blink',
            type: 'videoPlay',
            data: {
                playerId: 'test-player-id',
                muted: true,
                position: 4,
                volume: 84,
                videoId: '4934023d',
                reason: 'autoplay',
            },
        });
        var videoStopPause = send.mock.calls[2][0];
        expect(videoStopPause).toEqual({
            party: 'blink',
            type: 'videoStop',
            data: {
                playerId: 'test-player-id',
                muted: true,
                position: 4,
                volume: 84,
                videoId: '4934023d',
                reason: 'pause',
            },
        });
        var videoStopComplete = send.mock.calls[3][0];
        expect(videoStopComplete).toEqual({
            party: 'blink',
            type: 'videoStop',
            data: {
                playerId: 'test-player-id',
                muted: true,
                position: 4,
                volume: 84,
                videoId: '4934023d',
                reason: 'complete',
            },
        });
        var videoStopNextClick = send.mock.calls[4][0];
        expect(videoStopNextClick).toEqual({
            party: 'blink',
            type: 'videoStop',
            data: {
                playerId: 'test-player-id',
                muted: true,
                position: 4,
                volume: 84,
                videoId: '4934023d',
                reason: 'exit',
            },
        });
        var videoPlayerHidden = send.mock.calls[5][0];
        expect(videoPlayerHidden).toEqual({
            party: 'blink',
            type: 'playerHidden',
            data: {
                playerId: 'test-player-id',
                muted: true,
                position: 4,
                volume: 84,
                reason: 'viewable',
                time: time,
            },
        });
        var videoAd = send.mock.calls[6][0];
        expect(videoAd).toEqual({
            party: 'blink',
            type: 'videoAd',
            data: {
                adId: '444628240',
                adPosition: 'pre',
                client: 'googima',
                creativeId: '117060957',
                duration: 15,
                isBumper: false,
                playerId: 'test-player-id',
                system: 'DCM',
                title: 'In-Stream Video',
                videoId: '4934023d',
                viewable: 1,
            },
        });
        var playerSticky = send.mock.calls[7][0];
        expect(playerSticky).toEqual({
            party: 'blink',
            type: 'playerSticky',
            data: {
                closed: true,
                playerId: 'test-player-id',
                sticky: true,
                videoId: '4934023d',
            },
        });
    });
});
//# sourceMappingURL=subscribe-to-jw.test.js.map