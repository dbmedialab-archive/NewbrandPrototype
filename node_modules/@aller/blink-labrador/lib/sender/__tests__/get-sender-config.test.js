"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var get_sender_config_1 = __importStar(require("../get-sender-config"));
describe('getSenderConfig', function () {
    it('should return correct keys even when no user agent provided', function () {
        var configurationParameters = get_sender_config_1.default();
        var expectedKeys = [
            'sendInterval',
            'batchLimit',
            'batchInterval',
            'endpoints',
        ];
        expect(Object.keys(configurationParameters)).toEqual(expectedKeys);
    });
    it('should return default when user agent does not include app', function () {
        var configurationParameters = get_sender_config_1.default('Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:64.0) Gecko/20100101 Firefox/64.0');
        var expected = {
            sendInterval: 5000,
            batchLimit: 2,
            batchInterval: 2000,
            endpoints: [
                { type: get_sender_config_1.EndpointType.URL, value: '/app/aas/a' },
                { type: get_sender_config_1.EndpointType.GOOGLE_ANALYTICS },
            ],
        };
        expect(configurationParameters).toEqual(expected);
    });
    it('should return app config when user agent does include app', function () {
        var configurationParameters = get_sender_config_1.default('Mozilla/5.0 (iPhone; CPU iPhone OS 11_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15G77 _app_');
        var expected = {
            sendInterval: 2000,
            batchLimit: 0,
            batchInterval: 0,
            endpoints: [
                { type: get_sender_config_1.EndpointType.URL, value: '/app/aas/a' },
                { type: get_sender_config_1.EndpointType.GOOGLE_ANALYTICS },
            ],
        };
        expect(configurationParameters).toEqual(expected);
    });
});
//# sourceMappingURL=get-sender-config.test.js.map